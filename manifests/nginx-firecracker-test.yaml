---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-firecracker
  labels:
    app: nginx
    runtime: firecracker
spec:
  # Use Firecracker runtime via RuntimeClass
  runtimeClassName: firecracker

  # Node selector to ensure scheduling on k8s-node-1 where Firecracker is installed
  nodeSelector:
    kubernetes.io/hostname: k8s-node-1

  containers:
  - name: nginx
    image: nginx:1.27-alpine
    ports:
    - containerPort: 80
      name: http
      protocol: TCP

    # Resource limits - keep small since we're in a microVM with limited RAM
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "500m"

    # Simple readiness probe to verify nginx is working
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
      successThreshold: 1
      failureThreshold: 3

    # Liveness probe
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3

  # Restart policy
  restartPolicy: Always

  # DNS policy
  dnsPolicy: ClusterFirst
---
# Optional: Service to expose nginx for easier testing
apiVersion: v1
kind: Service
metadata:
  name: nginx-firecracker-svc
  labels:
    app: nginx
    runtime: firecracker
spec:
  type: NodePort
  selector:
    app: nginx
    runtime: firecracker
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
